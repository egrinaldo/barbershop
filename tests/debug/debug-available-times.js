const axios = require('axios');

async function debugAvailableTimes() {
  try {
    const today = new Date().toISOString().split('T')[0];
    const now = new Date();
    
    console.log('üîç DEBUG: API de hor√°rios dispon√≠veis');
    console.log('üìÖ Data:', today);
    console.log('‚è∞ Hor√°rio atual:', now.toLocaleTimeString());
    console.log('‚è∞ Hor√°rio atual (ISO):', now.toISOString());
    
    // Fazer a requisi√ß√£o para a API
    const response = await axios.get(`http://localhost:3001/api/appointments/available-times/${today}?serviceId=cme1et2lf0000czeamwboti9i`);
    const availableTimes = response.data;
    
    console.log('\nüìã Hor√°rios retornados pela API:', availableTimes);
    
    // Analisar cada hor√°rio
    console.log('\nüß™ An√°lise de cada hor√°rio:');
    availableTimes.forEach(timeSlot => {
      const slotDateTime = new Date(`${today}T${timeSlot}`);
      const currentTime = now.getTime();
      const slotTime = slotDateTime.getTime();
      const marginTime = currentTime + (5 * 60 * 1000); // 5 minutos de margem
      
      const isPast = slotTime <= marginTime;
      
      console.log(`‚è∞ ${timeSlot}:`);
      console.log(`  - Slot time: ${slotDateTime.toISOString()}`);
      console.log(`  - Current + 5min: ${new Date(marginTime).toISOString()}`);
      console.log(`  - Is past: ${isPast}`);
      console.log(`  - Should be excluded: ${isPast ? 'YES' : 'NO'}`);
      console.log('');
    });
    
    // Verificar se h√° hor√°rios que deveriam ter sido exclu√≠dos
    const pastTimes = availableTimes.filter(timeSlot => {
      const slotDateTime = new Date(`${today}T${timeSlot}`);
      return slotDateTime.getTime() <= now.getTime() + (5 * 60 * 1000);
    });
    
    if (pastTimes.length > 0) {
      console.log('‚ùå PROBLEMA: Hor√°rios passados encontrados:', pastTimes);
    } else {
      console.log('‚úÖ SUCESSO: Nenhum hor√°rio passado encontrado');
    }
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
    if (error.response) {
      console.error('üìã Resposta do servidor:', error.response.data);
    }
  }
}

debugAvailableTimes();